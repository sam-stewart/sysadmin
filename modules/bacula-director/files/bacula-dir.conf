#
# Default Bacula Director Configuration file
#
#  The only thing that MUST be changed is to add one or more
#   file or directory names in the Include directive of the
#   FileSet resource.
#
#  For Bacula release 5.2.6 (21 February 2012) -- debian 7.0
#
#  You might also want to change the default email address
#   from root to your address.  See the "mail" and "operator"
#   directives in the Messages resource.
#

Director {                            # define myself
  Name = mgmt-dir
  DIRport = 9101                # where we listen for UA connections
  QueryFile = "/etc/bacula/scripts/query.sql"
  WorkingDirectory = "/var/lib/bacula"
  PidDirectory = "/var/run/bacula"
  Maximum Concurrent Jobs = 1
  Password = "b4kuL4OP"         # Console password
  Messages = Daemon
  DirAddress = 10.25.1.41
}

# Backup the catalog database (after the nightly save)
Job {
  Name = "BackupCatalog"
  Type = Backup
  Level = Full
  FileSet="Catalog"
  Schedule = "WeeklyCycleAfterBackup"
  Client = mgmt-fd
  Storage = File
  Messages = Standard
  Pool = File
  # This creates an ASCII copy of the catalog
  # Arguments to make_catalog_backup.pl are:
  #  make_catalog_backup.pl <catalog-name>
  RunBeforeJob = "/etc/bacula/scripts/make_catalog_backup.pl MyCatalog"
  # This deletes the copy of the catalog
  RunAfterJob  = "/etc/bacula/scripts/delete_catalog_backup"
  Write Bootstrap = "/var/lib/bacula/%n.bsr"
  Priority = 11                   # run after main backup
}

# MYSQL Database Backup Job
Job {
  Name = "MySQLBackup"
  Type = Backup
  Level = Incremental
  Client = db-fd
  FileSet = "DBDump"
  Schedule = "WeeklyCycle"
  Storage = File
  Messages = Standard
  Pool = File
  Priority = 1
  Write Bootstrap = "/var/lib/bacula/%c.bsr"
}

# MySQL Database Restore Job
Job {
  Name = "MySQLRestore"
  Type = Restore
  Client = db-fd
  FileSet = "DBDump"
  Storage = File
  Where = /home/bacula/restores
  Messages = Standard
  Pool = File
}

# Standard Debian Backup: /etc and /home
JobDefs {
  Type = Backup
  Name = "StdDebian"
  Level = Incremental
  FileSet = "EtcHome"
  Schedule = "WeeklyCycle"
  Storage = File
  Messages = Standard
  Pool = File
  Priority = 5
  Write Bootstrap = "/var/lib/bacula/%c.bsr"
}
# Standard debian restore
JobDefs {
 Type = Restore
  Name = "StdDebianRestore"
  FileSet = "EtcHome"
  Storage = File
  Where = /home/bacula/restores
  Messages = Standard
  Pool = File
} 

# Windows backup and restore jobs
Job {
  Type = Backup
  Name = "WinBackup"
  Client = ad-fd
  Level = Incremental
  Storage = File
  FileSet = "Windows"
  Schedule = "WeeklyCycle"
  Storage = File
  Messages = Standard
  Pool = File
  Priority = 4
  Write Bootstrap = "/var/lib/bacula/%c.bsr"
}
Job {
  Type = Restore
  Name = "WinRestore"
  Client = ad-fd
  FileSet = "Windows"
  Storage = File
  Where = C:/bacula/restores
  Messages = Standard
  Pool = File
}

# Debian standard backup and restore jobs
Job {
  Name = "AppBackup"
  Client = app-fd
  JobDefs = "StdDebian"
}
Job {
  Name = "AppRestore"
  Client = app-fd
  JobDefs = "StdDebianRestore"
}

Job {
  Name = "DbBackup"
  Client = db-fd
  JobDefs = "StdDebian"
}
Job {
  Name = "DbRestore"
  Client = db-fd
  JobDefs = "StdDebianRestore"
}

Job {
  Name = "MgmtBackup"
  Client = mgmt-fd
  JobDefs = "StdDebian"
}
Job {
  Name = "MgmtRestore"
  Client = mgmt-fd
  JobDefs = "StdDebianRestore"
}

# Backup schedule
Schedule {
  Name = "WeeklyCycle"
  Run = Full 1st sun at 2:00
  Run = Differential 2nd-5th sun at 2:00
  Run = Incremental mon-sat at 2:00
}

# This schedule does the catalog. It starts after the WeeklyCycle
Schedule {
  Name = "WeeklyCycleAfterBackup"
  Run = Full sun-sat at 2:10
}

# This is the backup of the catalog
FileSet {
  Name = "Catalog"
  Include {
    Options {
      signature = MD5
    }
    File = "/var/lib/bacula/bacula.sql"
  }
}

# MySQL DB FileSet
FileSet {
  Name = "DBDump"
  Include {
    Options {
      signature = MD5
    }
    File = /root/db.backup.sql
  }
}

# Fileset for Debian hosts
FileSet {
  Name = "EtcHome"
  Include {
    Options {
      signature = MD5
    }
    File = /etc
    File = /home
  }
}

# Fileset for Windows host, Active directory DB and User stuff.
FileSet {
  Name = "Windows"
  Include {
    Options {
      signature = MD5
    }
    File = C:/Windows/ntds
    File = C:/Users
  }
}

# Client (File Services) to backup
Client {
  Name = mgmt-fd
  Address = 10.25.1.41
  FDPort = 9102
  Catalog = MyCatalog
  Password = "b4kuL4OP"          # password for FileDaemon
  File Retention = 30 days            # 30 days
  Job Retention = 6 months            # six months
  AutoPrune = yes                     # Prune expired Jobs/Files
}

Client {
  Name = ad-fd
  Address = 10.25.1.45
  FDPort = 9102
  Catalog = MyCatalog
  Password = "b4kuL4OP"
  File Retention = 30 days
  Job Retention = 6 months
  AutoPrune = yes
}

Client {
  Name = db-fd
  Address = 10.25.1.46
  FDPort = 9102
  Catalog = MyCatalog
  Password = "b4kuL4OP"         # password for FileDaemon 2
  File Retention = 30 days            # 30 days
  Job Retention = 6 months            # six months
  AutoPrune = yes                     # Prune expired Jobs/Files
}

Client {
  Name = app-fd
  Address = 10.25.1.44
  FDPort = 9102
  Catalog = MyCatalog
  Password = "b4kuL4OP"
  File Retention = 30 days
  Job Retention = 6 months
  AutoPrune = yes
}

Client {
  Name = storage-fd
  Address = 10.25.1.42
  FDPort = 9102
  Catalog = MyCatalog
  Password = "b4kuL4OP"
  File Retention = 30 days
  Job Retention = 6 months
  AutoPrune = yes
}

Storage {
  Name = File
  Address = 10.25.1.42                
  SDPort = 9103
  Password = "b4kuL4OP"
  Device = FileStorage
  Media Type = File
}

# Generic catalog service
Catalog {
  Name = MyCatalog
  dbname = "bacula"; dbuser = ""; dbpassword = ""
}

# Reasonable message delivery -- send most everything to email address
#  and to the console
Messages {
  Name = Standard
#
# NOTE! If you send to two email or more email addresses, you will need
#  to replace the %r in the from field (-f part) with a single valid
#  email address in both the mailcommand and the operatorcommand.
#  What this does is, it sets the email address that emails would display
#  in the FROM field, which is by default the same email as they're being
#  sent to.  However, if you send email to more than one address, then
#  you'll have to set the FROM address manually, to a single address. 
#  for example, a 'no-reply@mydomain.com', is better since that tends to
#  tell (most) people that its coming from an automated source.

#
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: %t %e of %c %l\" %r"
  operatorcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: Intervention needed for %j\" %r"
  mail = root = all, !skipped            
  operator = root = mount
  console = all, !skipped, !saved
#
# WARNING! the following will create a file that you must cycle from
#          time to time as it will grow indefinitely. However, it will
#          also keep all your messages if they scroll off the console.
#
  append = "/var/log/bacula/bacula.log" = all, !skipped
  catalog = all
}

# Message delivery for daemon messages (no job).
Messages {
  Name = Daemon
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula daemon message\" %r"
  mail = root = all, !skipped            
  console = all, !skipped, !saved
  append = "/var/log/bacula/bacula.log" = all, !skipped
}

# File Pool definition
Pool {
  Name = File
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 365 days         # one year
  Maximum Volume Bytes = 50G          # Limit Volume size to something reasonable
  Maximum Volumes = 100               # Limit number of Volumes in Pool
  LabelFormat = "Vol"
}

# Restricted console used by tray-monitor to get the status of the director
#
Console {
  Name = mgmt-mon
  Password = "xDmH-lLbK454mSgkjqkZH9aD2gorT47Qg"
  CommandACL = status, .status
}
